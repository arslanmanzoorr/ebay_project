{
  "meta": {
    "project": "BidSquire Auction Workflow Management System",
    "date": "2025-08-31",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "BidSquire is a comprehensive auction workflow management system that streamlines the process of researching, photographing, and cataloging auction items. It integrates with external auction platforms and provides role-based access to support distinct user roles such as admin, researcher, photographer, and final researcher.",
  "core_goals": [
    "Streamline auction item data processing and management",
    "Support multi-role workflow with role-based access control",
    "Automate integration with external auction services via webhooks",
    "Provide comprehensive dashboards for admin and various user roles",
    "Enable efficient image upload, management, and cataloging",
    "Ensure production-grade deployment with scalable infrastructure"
  ],
  "key_features": [
    "Complete user authentication system with login, signup, and role-based access control",
    "Admin dashboard for managing users, auction items, and system operations",
    "Auction item lifecycle management from research through finalization",
    "Image upload and management with file handling and storage",
    "Webhook integration for receiving and processing auction data",
    "Reusable UI components built with Radix UI and Tailwind CSS",
    "API endpoints supporting user, file, webhook, and system operations",
    "Production-ready Docker and Nginx configurations for deployment",
    "User profile management including password change functionality"
  ],
  "user_flow_summary": [
    "Users authenticate via login/signup and gain role-based dashboard access",
    "Researchers manage auction items by researching, estimating, and updating status",
    "Photographers upload images, manage photograph quantities, and update item statuses",
    "Researcher2 users perform final research and data validation before finalization",
    "Admins oversee users, items, webhook data, and system health via the admin dashboard",
    "External auction data is received and processed via webhooks integrated with n8n workflows"
  ],
  "validation_criteria": [
    "User authentication and role access control must enforce correct permissions",
    "Auction item data flows correctly through all workflow stages with accurate status updates",
    "Image uploads are successfully stored and accessible via the UI",
    "Webhook data is properly received, stored, and presented in dashboards",
    "API endpoints return appropriate success or error responses with correct data",
    "Docker and Nginx configurations enable smooth deployment in production environments",
    "Admin dashboard supports full user and system management capabilities",
    "UI components follow accessibility and responsive design standards"
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js",
      "React",
      "PostgreSQL",
      "Docker",
      "Nginx",
      "Tailwind CSS",
      "Radix UI",
      "Node.js",
      "SQLite3"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Complete user authentication system with login, signup, and role-based access control",
        "files": [
          "project/contexts/AuthContext.tsx",
          "project/app/auth/login/page.tsx",
          "project/app/auth/signup/page.tsx",
          "project/app/auth/signin/page.tsx",
          "project/services/database.ts",
          "project/pages/api/users/index.ts",
          "project/pages/api/users/[id].ts",
          "project/pages/api/users/email/[email].ts"
        ]
      },
      {
        "name": "Admin Dashboard",
        "description": "Comprehensive admin dashboard for managing users, auction items, and system operations",
        "files": [
          "project/app/admin/page.tsx",
          "project/components/layout/navbar.tsx"
        ]
      },
      {
        "name": "Auction Item Management",
        "description": "Complete auction item lifecycle management from research to finalization",
        "files": [
          "project/app/researcher/page.tsx",
          "project/app/researcher2/page.tsx",
          "project/app/photographer/page.tsx",
          "project/services/dataStore.ts",
          "project/types/auction.ts"
        ]
      },
      {
        "name": "Image Upload and Management",
        "description": "Image upload functionality with file handling and storage",
        "files": [
          "project/components/ImageUpload.tsx",
          "project/pages/api/upload/image.ts",
          "project/pages/api/uploads/[...path].ts"
        ]
      },
      {
        "name": "Webhook Integration",
        "description": "External webhook integration for receiving and processing auction data",
        "files": [
          "project/pages/api/webhook/receive.ts",
          "project/pages/api/webhook/receive/[id].ts",
          "project/pages/api/webhook/send-external.ts",
          "project/services/sqliteService.ts"
        ]
      },
      {
        "name": "Database Services",
        "description": "Database abstraction layer supporting both PostgreSQL and SQLite",
        "files": [
          "project/services/database.ts",
          "project/services/sqliteService.ts",
          "project/services/dataStore.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "project/components/ui/button.tsx",
          "project/components/ui/card.tsx",
          "project/components/ui/input.tsx",
          "project/components/ui/select.tsx",
          "project/components/ui/badge.tsx",
          "project/components/ui/alert.tsx",
          "project/components/ui/dialog.tsx",
          "project/components/ui/tabs.tsx",
          "project/components/ui/table.tsx",
          "project/components/ui/toast.tsx"
        ]
      },
      {
        "name": "API Testing",
        "description": "API testing utilities and health check endpoints",
        "files": [
          "project/components/api-test.tsx",
          "project/app/api-test/page.tsx",
          "project/pages/api/health.ts",
          "project/pages/api/test-sqlite.ts"
        ]
      },
      {
        "name": "Production Configuration",
        "description": "Production-ready Docker and Nginx configuration",
        "files": [
          "docker-compose.prod.yml",
          "project/Dockerfile.prod",
          "nginx/conf.d/default.conf",
          "nginx/Dockerfile",
          "deploy-production.sh",
          "env.production.template"
        ]
      },
      {
        "name": "Profile Management",
        "description": "User profile management and password change functionality",
        "files": [
          "project/app/profile/page.tsx"
        ]
      }
    ]
  }
}
